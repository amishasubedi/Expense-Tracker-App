Section:3
how to make components resusable?
copy and paste the line in App.js 
To convert date into human readable form, use .toLocaleString();
/*
props - object that stores the value of attributes of tag and work similar to the HTML.
      - gives a way to pass data from one component to other components

      function Alu (props) - props passed in function (same way as arguments passed in function)


multiple components - splitting task into smaller projects
Since, we need to style date seperately, it will be easier to split ExpenseItem into 2 components.
    1. ExpenseItem class iteself
    2. Date

Card - container look

Alternative way of writing function: -> use arrow function (JS thing)

for instance:

        const App = () => {
            // 
        }

Function and Class Components

function Check (props) {
    return <h1> k cha, {props.name} </h1>
}

This function accepts a single props (which basically stands for properties)
object argument with data and returns a React element, they are called function
components as they are js functions.


React State and Working with Events:
    - User Interaction
       -> handling Events
    - updating UI and working with "State"
    - Components and State

 1. Listening to events and working with event handlers
 In React, we add event listener by going to the JSX element, and there we add a special prop.
 <button onCLick = {function click() {console.log("ok")}}> Change button </button>

 A function should be passed as a value for onClick

WORKING WITH STATE
    - if you have a variable in your component function, and that variable changes, React ignores it
      overall component function does not execute it again just because some variable changed.
    - Component function does not execute just because some event handlers occured.
    - To run the component again, import React, { useState } from 'react';
    - useState always returns an array with exactly two elements. 
      first element is the current state value, 
      second element is a function for updating that value.

      So, when updating value, we just call updating function instead of assigning value using =. but Why??
        - calling a function does not just assign a new value to some variable but the component function 
          in which you called that function will be executed again. - evaluates the JSX code again, and detects changes
          onto the screen.

    State is seperated on a per component instance basis

    Child to parent communication




    Lifting the State up: moving data from child to parent component
         App
  Expenses   NewExpenses   

  No direct communication between Expenses and NewExpenses;
  So, NewExpenses - App (communication)- Lifting the State up
  App-Expenses (communication) - pass state data via props
  A    